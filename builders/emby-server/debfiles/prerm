#!/bin/sh
set -e

NAME=emby-server
CONF_FILE=/etc/${NAME}.conf
DEFAULT_FILE=/etc/default/${NAME}

# Source Emby server default configuration
if [ -f $DEFAULT_FILE ]; then
  . $DEFAULT_FILE
fi

# Source Emby server user configuration overrides
if [ -f $CONF_FILE ]; then
  . $CONF_FILE
fi

# Data directory where Emby database, cache and logs are stored
PROGRAMDATA=${EMBY_DATA-/var/lib/$NAME}

case "$1" in
  remove|upgrade|deconfigure)
    # try and figure out if emby is running
    PIDFILE=`find /var/run -name "emby*.pid" -print -quit`
    [ -n "$PIDFILE" ] && EMBY_PID=`cat ${PIDFILE} 2> /dev/null || true`
    # if its running, let's stop it
    if [ -n "$EMBY_PID" ]; then
      echo "Stopping Emby Server!"
      # try graceful termination;
      # Figure out how to start/stop emby-server daemon
      if which systemctl > /dev/null 2>&1; then
        sysetemctl stop ${NAME} 2>/dev/null || true
      elif which service >/dev/null 2>&1; then
        service ${NAME} stop 2>/dev/null || true
      elif which invoke-rc.d >/dev/null 2>&1; then
        invoke-rc.d ${NAME} stop 2>/dev/null || true
      else
        /etc/init.d/${NAME} stop 2>/dev/null || true
      fi
      # if emby is still running, kill it
      if kill -0 $EMBY_PID > /dev/null 2>&1; then
        CPIDS=$(pgrep -P $EMBY_PID)
        sleep 2 && kill -KILL $CPIDS
        kill -TERM $CPIDS > /dev/null 2>&1
      fi
      sleep 1
      # if it's still running, show error
      if kill -0 $EMBY_PID > /dev/null; then
        echo "Could not successfully stop EmbyServer, please do so before uninstalling."
        exit 1
      else
        [ -f $PIDFILE ] && rm $PIDFILE
      fi
    fi
    if [ -f /usr/lib/emby-server/bin/MediaBrowser.Server.Mono.exe.so ]; then
      rm /usr/lib/emby-server/bin/MediaBrowser.Server.Mono.exe.so
    fi
    ;;
  failed-upgrade)
    ;;
  *)
    echo "prerm called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

#DEBHELPER#
exit 0
