#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1


export QUANTUMDEPTH ?= Q8
export CORESOVERSION ?= 2
export WANDSOVERSION ?= 2
export PPSOVERSION ?= 5

# for hardening
# export DEB_BUILD_MAINT_OPTIONS = hardening=+all
export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

export STATIC_DEB_HOST_GNU_TYPE := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
export DEB_HOST_GNU_TYPE  ?= $(STATIC_DEB_HOST_GNU_TYPE)
export STATIC_DEB_HOST_MULTIARCH := $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
export DEB_HOST_MULTIARCH ?= $(STATIC_DEB_HOST_MULTIARCH)
export STATIC_DEB_BUILD_GNU_TYPE := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
export DEB_BUILD_GNU_TYPE ?= $(STATIC_DEB_BUILD_GNU_TYPE)
export STATIC_DEB_SOURCE_PACKAGE := $(strip $(shell egrep '^Source: ' debian/control | cut -f 2 -d ':'))
export DEB_SOURCE_PACKAGE ?= $(STATIC_DEB_SOURCE_PACKAGE)
export STATIC_DEB_VERSION := $(shell dpkg-parsechangelog | egrep '^Version:' | cut -f 2 -d ' ')
export DEB_VERSION ?= $(STATIC_DEB_VERSION)
export STATIC_DEB_NOEPOCH_VERSION := $(shell echo $(DEB_VERSION) | cut -d: -f2-)
export DEB_NOEPOCH_VERSION ?= $(STATIC_DEB_NOEPOCH_VERSION)
export STATIC_DEB_UPSTREAM_VERSION := $(shell echo $(DEB_NOEPOCH_VERSION) | sed 's/-[^-]*$$//')
export DEB_UPSTREAM_VERSION ?= $(STATIC_DEB_UPSTREAM_VERSION)
export STATIC_DEB_ISNATIVE := $(shell dpkg-parsechangelog | egrep '^Version:' | perl -ne 'print if not /^Version:\s*.*-/;')
export DEB_ISNATIVE ?= $(STATIC_DEB_ISNATIVE)

export STATIC_DEB_UPSTREAM_VERSION_DROPREVISION := $(shell echo $(DEB_UPSTREAM_VERSION) |  sed -r "s/(^.+)\..+$$/\1/g")
export DEB_UPSTREAM_VERSION_DROPREVISION ?= $(STATIC_DEB_UPSTREAM_VERSION_DROPREVISION)
export STATIC_DEB_UPSTREAM_VERSION_MAJOR := $(shell echo $(DEB_UPSTREAM_VERSION) | sed -r "s/(^[[:digit:]]+)\..+$$/\1/g")
export DEB_UPSTREAM_VERSION_MAJOR ?= $(STATIC_DEB_UPSTREAM_VERSION_MAJOR)
export IMVERSION := $(DEB_UPSTREAM_VERSION_MAJOR)

# quantum depth used by default and by quantum independant package (first one of QUANTUMDEPTH)
export DEFAULTQUANTUMDEPTH := $(shell echo $(QUANTUMDEPTH) | cut -f 1 -d ' ')
export NOQUANTUMDEPTH := $(shell echo $(QUANTUMDEPTH) | cut -f 1 -d ' ')

# convert
export CONVERT ?= ./magick.sh convert
#export CONVERT = MAGICK_CONFIGURE_PATH=./config LD_LIBRARY_PATH=$(CURDIR)/magick/.libs:$(CURDIR)/wand/.libs MAGICK_CODER_MODULE_PATH=$(CURDIR)/coders/.libs $(CURDIR)/utilities/.libs/convert
export CONVERT_FLAGS ?= -background none -define filter:blur=0.75 -filter Gaussian

# perl
export DEB_PERL_ARCHLIB := $(shell perl -MConfig -e 'print $$Config{vendorarch}')

# put QUANTUMDEPTH in lower case for package name
#export QUANTUMDEPTH_LOWER ?= $(shell echo $(QUANTUMDEPTH) | sed -e 's/\(.*\)/\L\1/'))

export STATIC_CONFIGURE_CACHEFILE := config.cache
export CONFIGURE_CACHEFILE ?= $(STATIC_CONFIGURE_CACHEFILE)

export STATIC_CONFIGURE_OPTIONS_CACHE := \
       --cache-file=../../$(CONFIGURE_CACHEFILE)
export CONFIGURE_OPTIONS_CACHE ?= $(STATIC_CONFIGURE_OPTIONS_CACHE)
# disable arch optimization see #757996 and AX_GCC_ARCHFLAG m4 macro
export STATIC_CONFIGURE_ARCH_FLAGS := --without-gcc-arch
export CONFIGURE_ARCH_FLAGS ?= $(STATIC_CONFIGURE_ARCH_FLAGS)

# check if FPU
HAVE_FPU_CMD:= case $(DEB_HOST_MULTIARCH) in \
		mips*-*) \
			if grep " FPU" /proc/cpuinfo > /dev/null; then \
				echo "yes"; \
			else \
				echo "no"; \
			fi ;;\
		*) \
			echo "yes" ;; \
		   esac
export STATIC_HAVE_FPU := $(shell $(HAVE_FPU_CMD))

test_fpu_is present:
	echo "CPU has FPU...$(STATIC_HAVE_FPU)"

# NOTICE: remove EPL delegate lib gvc (license problem)
export STATIC_CONFIGURE_OPTIONS := \
	--prefix=/usr \
	--libdir=/usr/lib/$(DEB_HOST_MULTIARCH) \
	--sysconfdir=/etc \
	--with-includearch-dir=/usr/include/$(DEB_HOST_MULTIARCH)/ \
	--with-modules \
	--with-djvu=no \
	--without-wmf \
	--without-gvc \
	--enable-shared \
	--without-dps \
	--without-fpx \
	--with-rsvg=no \
	--with-tiff=yes \
	--with-webp=yes \
	--with-jpeg=yes \
	--with-png=yes \
	--with-xml=yes \
	--with-x=no \
	--enable-hdri=no \
	--with-magick-plus-plus=no \
	--with-gslib=no \
	--disable-openmp \
	--with-fontconfig=no \
	--with-gvc=no \
	--with-openexr=no

export CONFIGURE_OPTIONS ?= $(STATIC_CONFIGURE_OPTIONS) \
				$(CONFIGURE_OPTIONS_CACHE) \
				$(CONFIGURE_ARCH_FLAGS)

%:
	dh $@ --with autoreconf;

override_dh_autoreconf:
	 dh_autoreconf --as-needed

# configure in build directory
quantum_override_dh_auto_configure-arch_%:
	dh_auto_configure --builddirectory="debian/build-quantum-$*" -- \
		 ${CONFIGURE_OPTIONS} \
		--disable-silent-rules \
		--with-quantum-depth=${shell echo $* | sed -r 's/q?([[:digit:]]*)(HDRI)?/\1/gi'}

override_dh_auto_configure-arch: quantum_override_dh_auto_configure-arch_Q8

# dh_auto_build in build directory
quantum_override_dh_auto_build-arch_%:
	dh_auto_build --builddirectory="debian/build-quantum-$*" -- all

override_dh_auto_build-arch: quantum_override_dh_auto_build-arch_Q8

# dh_auto_install in build directory
quantum_override_dh_auto_install-arch_%:
	dh_auto_install --builddirectory="debian/build-quantum-$*" \
					--destdir="debian/tmp-$*"

	# empties dependency_libs from .la files
	# http://lists.debian.org/debian-devel/2009/08/msg00783.html
	find $(CURDIR)/debian/tmp-$*/usr/lib -name '*.la' -exec \
		sed -i "s,^dependency_libs=.*,dependency_libs=''," {} \;
	# Remove RPATH from *.so
	find $(CURDIR)/debian/tmp-$* -name '*.so*' -exec \
		chrpath -d {} \;

	# Remove empty directories in debian/tmp
	-find $(CURDIR)/debian/tmp-$* -type d -empty | xargs -r rmdir -p

override_dh_auto_install-arch: quantum_override_dh_auto_install-arch_Q8
	mkdir -p debian/tmp-$(DEFAULTQUANTUMDEPTH)


# install quantum package
quantum_override_dh_install-arch_%:
	dh_install --package=libembymagickcore-${IMVERSION}.${shell echo $* | sed -e 's/\(.*\)/\L\1/'}-${CORESOVERSION} \
		--sourcedir=debian/tmp-$* --autodest
	dh_install --package=libembymagickwand-${IMVERSION}.${shell echo $* | sed -e 's/\(.*\)/\L\1/'}-${WANDSOVERSION} \
		--sourcedir=debian/tmp-$* --autodest

# install arch package
override_dh_install-arch: quantum_override_dh_install-arch_Q8

override_dh_makeshlibs:
	# avoid plugins' dir
	dh_makeshlibs -v -Xcoders/ -Xfilters/

# prep rules
quantum_override_dh_prep_%:
	[ ! -d debian/tmp-$* ] || rm -rf debian/tmp-$*

override_dh_prep: quantum_override_dh_prep_Q8
	dh_prep

# clean rules
quantum_override_dh_clean_%:
	[ ! -d debian/build-quantum-$* ] || rm -rf debian/build-quantum-$*
	[ ! -d debian/tmp-$* ] || rm -rf debian/tmp-$*

override_dh_clean: quantum_override_dh_clean_Q8
	[ ! -f $(CONFIGURE_CACHEFILE) ] || rm -f $(CONFIGURE_CACHEFILE)
	dh_clean
